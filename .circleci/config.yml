version: 2.1
orbs:
  docker: circleci/docker@0.5.19
  helm-tools: pennlabs/helm-tools@0.1.10
  django-tools:
    commands:
      code-coverage:
        description: |
          Upload code coverage to Codecov
        parameters:
          project-location:
            default: .
            description: Location of the django project. Defaults to .
            type: string
        steps:
          - run:
              command: |
                ROOT=$(pwd)
                cd << parameters.project-location >>
                pipenv run codecov --root $ROOT --flags backend
              name: Upload code coverage
      lint:
        description: |
          Lint using flake8 and black
        parameters:
          black:
            default: true
            description: Run black?
            type: boolean
          flake8:
            default: true
            description: Run flake8?
            type: boolean
          project-location:
            default: .
            description: Location of the django project. Defaults to .
            type: string
        steps:
          - when:
              condition: <<parameters.flake8>>
              steps:
                - run:
                    command: |
                      cd << parameters.project-location >>
                      pipenv run flake8 .
                    name: Lint
          - when:
              condition: <<parameters.black>>
              steps:
                - run:
                    command: |
                      cd << parameters.project-location >>
                      pipenv run black -l100 --check .
                    name: Lint
      setup:
        description: |
          Set up the CI environment
        parameters:
          project-location:
            default: .
            description: Location of the django project. Defaults to .
            type: string
        steps:
          - restore_cache:
              key:
                v0-{{ .Branch }}-{{ checksum "<< parameters.project-location >>/Pipfile.lock"
                }}
          - run:
              command: |
                cd << parameters.project-location >>
                sudo pip install pipenv
                pipenv install --deploy --dev
              name: Install dependencies
          - save_cache:
              key:
                v0-{{ .Branch }}-{{ checksum "<< parameters.project-location >>/Pipfile.lock"
                }}
              paths:
                - << parameters.project-location >>/.venv
                - /usr/local/bin
                - /usr/local/lib/python3.7/site-packages
      test:
        description: |
          Test the django project
        parameters:
          project-location:
            default: .
            description: Location of the django project. Defaults to .
            type: string
          project-name:
            description: Name of the django project. Required
            type: string
        steps:
          - run:
              command: |
                cd << parameters.project-location >>
                pipenv run coverage run manage.py test --settings=<< parameters.project-name >>.settings.ci
              name: Run tests
      upload-artifacts:
        description: |
          Upload test artifacts
        parameters:
          project-location:
            default: .
            description: Location of the django project. Defaults to .
            type: string
        steps:
          - store_test_results:
              path: << parameters.project-location >>/test-results
          - store_artifacts:
              destination: trl
              path: << parameters.project-location >>/test-results
    description: |
      Test, lint, and upload code coverage for a django project. Built for internal use at Penn Labs.
    examples:
      check:
        description: |
          Check a Django project in the root directory
        usage:
          orbs:
            django: pennlabs/django-tools@x.y.z
          version: 2.1
          workflows:
            build-and-deploy:
              jobs:
                - django/check:
                    project-name: pennlabs
      check-python3_8:
        description: |
          Check a Django project using a different version of python
        usage:
          orbs:
            django: pennlabs/django-tools@x.y.z
          version: 2.1
          workflows:
            build-and-deploy:
              jobs:
                - django/check:
                    project-name: pennlabs
                    python-version: "3.8"
      check-subdirectory:
        description: |
          Check a Django project that exists in a subdirectory
        usage:
          orbs:
            django: pennlabs/django-tools@x.y.z
          version: 2.1
          workflows:
            build-and-deploy:
              jobs:
                - django/check:
                    project-location: backend
                    project-name: pennlabs
      disable-linting:
        description: |
          Test a Django project without linting
        usage:
          orbs:
            django: pennlabs/django-tools@x.y.z
          version: 2.1
          workflows:
            build-and-deploy:
              jobs:
                - django/check:
                    black: false
                    flake8: false
                    project-name: pennlabs
    jobs:
      check:
        description: |
          Check a django project against Penn Labs' standards
        docker:
          - environment:
              DATABASE_URL: postgres://postgres:postgres@127.0.0.1:5432/postgres
              PIPENV_VENV_IN_PROJECT: true
            image: circleci/python:<< parameters.python-version >>
          - environment:
              POSTGRES_DB: postgres
              POSTGRES_PASSWORD: postgres
              POSTGRES_USER: postgres
            image: postgres:12
        parameters:
          black:
            default: true
            description: Run black?
            type: boolean
          flake8:
            default: true
            description: Run flake8?
            type: boolean
          project-location:
            default: .
            description: Location of the django project. Defaults to .
            type: string
          project-name:
            description: Name of the django project. Required
            type: string
          python-version:
            default: "3.7"
            description: Python version to use. Defaults to 3.7
            type: string
        steps:
          - checkout
          - run: sudo chown -R circleci:circleci /usr/local/bin
          - run: sudo chown -R circleci:circleci /usr/local/lib/python3.7/site-packages
          - setup:
              project-location: << parameters.project-location >>
          - lint:
              black: << parameters.black >>
              flake8: << parameters.flake8 >>
              project-location: << parameters.project-location >>
          - test:
              project-location: << parameters.project-location >>
              project-name: << parameters.project-name >>
          - code-coverage:
              project-location: << parameters.project-location >>
          - upload-artifacts:
              project-location: << parameters.project-location >>
    version: 2.1

branch-filters: &branch-filters
  filters:
    branches:
      only:
        - master

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - django-tools/check:
          project-name: "studentlife"
      - docker/publish:
          requires:
            - django-tools/check
          cache_from: "pennlabs/student-life:latest"
          image: pennlabs/student-life
          tag: "${CIRCLE_SHA1},latest"
          context: docker-publish
          <<: *branch-filters
      - helm-tools/deploy:
          requires:
            - docker/publish
          context: k8s-deploy
          <<: *branch-filters
