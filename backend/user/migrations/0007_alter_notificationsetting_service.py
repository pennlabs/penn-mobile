# Generated by Django 4.0.3 on 2022-03-25 21:38
from django.db import migrations, models


def create_settings_for_users(apps, schema_editor):
    """
    Creates settings for each user. Only run to transition
    to using settings. Assumes no settings have been created yet.
    """

    User = apps.get_model("auth", "User")

    NotificationToken = apps.get_model("user", "NotificationToken")
    NotificationSetting = apps.get_model("user", "NotificationSetting")
    SERVICE_OPTIONS = [
        "CFA",
        "Penn Clubs",
        "Penn Basics",
        "OHQ",
        "Penn Course Alert",
        "Penn Course Plan",
        "Penn Course Review",
        "Penn Mobile",
        "GSR Booking",
        "Dining",
        "University",
        "Laundry",
    ]

    for user in User.objects.all():
        token, _ = NotificationToken.objects.get_or_create(user=user)
        for service in SERVICE_OPTIONS:
            setting = NotificationSetting.objects.filter(token=token, service=service).first()
            if not setting:
                NotificationSetting.objects.create(token=token, service=service, enabled=False)


class Migration(migrations.Migration):

    dependencies = [
        ("user", "0006_alter_notificationtoken_user_notificationsetting"),
    ]

    operations = [
        migrations.AlterField(
            model_name="notificationsetting",
            name="service",
            field=models.CharField(
                choices=[
                    ("CFA", "CFA"),
                    ("PENN_CLUBS", "Penn Clubs"),
                    ("PENN_BASICS", "Penn Basics"),
                    ("OHQ", "OHQ"),
                    ("PENN_COURSE_ALERT", "Penn Course Alert"),
                    ("PENN_COURSE_PLAN", "Penn Course Plan"),
                    ("PENN_COURSE_REVIEW", "Penn Course Review"),
                    ("PENN_MOBILE", "Penn Mobile"),
                    ("GSR_BOOKING", "GSR Booking"),
                    ("DINING", "Dining"),
                    ("UNIVERSITY", "University"),
                    ("LAUNDRY", "Laundry"),
                ],
                default="PENN_MOBILE",
                max_length=30,
            ),
        ),
        migrations.RunPython(create_settings_for_users),
    ]
