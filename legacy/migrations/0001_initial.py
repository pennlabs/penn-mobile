# Generated by Django 3.0.3 on 2020-02-14 21:21

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Account",
            fields=[
                (
                    "id",
                    models.CharField(max_length=255, primary_key=True, serialize=False),
                ),
                ("first", models.TextField(blank=True, null=True)),
                ("last", models.TextField(blank=True, null=True)),
                ("pennkey", models.CharField(max_length=255, unique=True)),
                ("pennid", models.IntegerField(blank=True, null=True)),
                ("email", models.TextField(blank=True, null=True)),
                (
                    "affiliation",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("image_url", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(blank=True, null=True)),
            ],
            options={"db_table": "account", "managed": False},
        ),
        migrations.CreateModel(
            name="AnalyticsEvent",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("timestamp", models.DateTimeField()),
                ("type", models.CharField(max_length=50)),
                ("index", models.IntegerField()),
                ("post_id", models.CharField(blank=True, max_length=255, null=True)),
                ("is_interaction", models.IntegerField()),
                ("created_at", models.DateTimeField(blank=True, null=True)),
            ],
            options={"db_table": "analytics_event", "managed": False},
        ),
        migrations.CreateModel(
            name="AnonymousId",
            fields=[
                (
                    "id",
                    models.CharField(max_length=255, primary_key=True, serialize=False),
                ),
                ("type", models.CharField(blank=True, max_length=255, null=True)),
                ("device_key", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "password_hash",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("created_at", models.DateTimeField(blank=True, null=True)),
                ("updated_at", models.DateTimeField(blank=True, null=True)),
            ],
            options={"db_table": "anonymous_id", "managed": False},
        ),
        migrations.CreateModel(
            name="ArInternalMetadata",
            fields=[
                (
                    "key",
                    models.CharField(max_length=255, primary_key=True, serialize=False),
                ),
                ("value", models.CharField(blank=True, max_length=255, null=True)),
                ("created_at", models.DateTimeField()),
                ("updated_at", models.DateTimeField()),
            ],
            options={"db_table": "ar_internal_metadata", "managed": False},
        ),
        migrations.CreateModel(
            name="Course",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.TextField()),
                ("dept", models.TextField()),
                ("code", models.TextField()),
                ("section", models.TextField()),
                ("term", models.TextField()),
                ("weekdays", models.TextField()),
                ("start_date", models.DateField(blank=True, null=True)),
                ("end_date", models.DateField(blank=True, null=True)),
                ("start_time", models.TextField()),
                ("end_time", models.TextField()),
                ("building", models.TextField(blank=True, null=True)),
                ("room", models.TextField(blank=True, null=True)),
                ("extra_meetings_flag", models.IntegerField()),
            ],
            options={"db_table": "course", "managed": False},
        ),
        migrations.CreateModel(
            name="Degree",
            fields=[
                (
                    "code",
                    models.CharField(max_length=255, primary_key=True, serialize=False),
                ),
                ("name", models.TextField()),
            ],
            options={"db_table": "degree", "managed": False},
        ),
        migrations.CreateModel(
            name="DiningBalance",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("dining_dollars", models.FloatField()),
                ("swipes", models.IntegerField()),
                ("guest_swipes", models.IntegerField()),
                ("created_at", models.DateTimeField(blank=True, null=True)),
            ],
            options={"db_table": "dining_balance", "managed": False},
        ),
        migrations.CreateModel(
            name="DiningPreference",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(blank=True, null=True)),
                ("venue_id", models.IntegerField()),
            ],
            options={"db_table": "dining_preference", "managed": False},
        ),
        migrations.CreateModel(
            name="DiningTransaction",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateTimeField()),
                ("description", models.TextField()),
                ("amount", models.FloatField()),
                ("balance", models.FloatField()),
                ("created_at", models.DateTimeField(blank=True, null=True)),
            ],
            options={"db_table": "dining_transaction", "managed": False},
        ),
        migrations.CreateModel(
            name="Event",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("type", models.TextField()),
                ("name", models.TextField()),
                ("description", models.TextField()),
                ("image_url", models.TextField()),
                ("start_time", models.DateTimeField()),
                ("end_time", models.DateTimeField()),
                (
                    "image_file_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "image_content_type",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("image_file_size", models.IntegerField(blank=True, null=True)),
                ("image_updated_at", models.DateTimeField(blank=True, null=True)),
                ("website", models.CharField(blank=True, max_length=255, null=True)),
                ("facebook", models.CharField(blank=True, max_length=255, null=True)),
                ("email", models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={"db_table": "event", "managed": False},
        ),
        migrations.CreateModel(
            name="EventUsers",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("email", models.CharField(max_length=255, unique=True)),
                ("encrypted_password", models.CharField(max_length=255)),
                (
                    "reset_password_token",
                    models.CharField(blank=True, max_length=255, null=True, unique=True),
                ),
                ("reset_password_sent_at", models.DateTimeField(blank=True, null=True)),
                ("remember_created_at", models.DateTimeField(blank=True, null=True)),
                ("sign_in_count", models.IntegerField()),
                ("current_sign_in_at", models.DateTimeField(blank=True, null=True)),
                ("last_sign_in_at", models.DateTimeField(blank=True, null=True)),
                (
                    "current_sign_in_ip",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "last_sign_in_ip",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("created_at", models.DateTimeField()),
                ("updated_at", models.DateTimeField()),
            ],
            options={"db_table": "event_users", "managed": False},
        ),
        migrations.CreateModel(
            name="GsrRoomName",
            fields=[
                ("lid", models.IntegerField(primary_key=True, serialize=False)),
                ("gid", models.IntegerField()),
                ("rid", models.IntegerField()),
                ("name", models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={"db_table": "gsr_room_name", "managed": False},
        ),
        migrations.CreateModel(
            name="HomeCellOrder",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("cell_type", models.TextField()),
            ],
            options={"db_table": "home_cell_order", "managed": False},
        ),
        migrations.CreateModel(
            name="LaundryPreference",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(blank=True, null=True)),
                ("room_id", models.IntegerField()),
            ],
            options={"db_table": "laundry_preference", "managed": False},
        ),
        migrations.CreateModel(
            name="LaundrySnapshot",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField()),
                ("time", models.IntegerField()),
                ("room", models.IntegerField()),
                ("washers", models.IntegerField()),
                ("dryers", models.IntegerField()),
                ("total_washers", models.IntegerField()),
                ("total_dryers", models.IntegerField()),
            ],
            options={"db_table": "laundry_snapshot", "managed": False},
        ),
        migrations.CreateModel(
            name="Major",
            fields=[
                (
                    "code",
                    models.CharField(max_length=255, primary_key=True, serialize=False),
                ),
                ("name", models.TextField()),
            ],
            options={"db_table": "major", "managed": False},
        ),
        migrations.CreateModel(
            name="Post",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("source", models.TextField(blank=True, null=True)),
                ("title", models.TextField(blank=True, null=True)),
                ("subtitle", models.TextField(blank=True, null=True)),
                ("time_label", models.TextField(blank=True, null=True)),
                ("post_url", models.TextField(blank=True, null=True)),
                ("image_url", models.TextField()),
                ("filters", models.IntegerField(blank=True, null=True)),
                ("start_date", models.DateTimeField()),
                ("end_date", models.DateTimeField()),
                ("approved", models.IntegerField(blank=True, null=True)),
                ("offline", models.IntegerField()),
                ("testers", models.IntegerField()),
                ("emails", models.IntegerField()),
                ("created_at", models.DateTimeField(blank=True, null=True)),
                ("image_url_cropped", models.TextField(blank=True, null=True)),
            ],
            options={"db_table": "post", "managed": False},
        ),
        migrations.CreateModel(
            name="PostAccount",
            fields=[
                (
                    "id",
                    models.CharField(max_length=255, primary_key=True, serialize=False),
                ),
                ("name", models.TextField()),
                ("email", models.CharField(max_length=255, unique=True)),
                ("encrypted_password", models.CharField(max_length=255)),
                (
                    "reset_password_token",
                    models.CharField(blank=True, max_length=255, null=True, unique=True),
                ),
                (
                    "reset_password_token_sent_at",
                    models.DateTimeField(blank=True, null=True),
                ),
                ("sign_in_count", models.IntegerField()),
                ("last_sign_in_at", models.DateTimeField()),
                ("created_at", models.DateTimeField(blank=True, null=True)),
                ("updated_at", models.DateTimeField(blank=True, null=True)),
            ],
            options={"db_table": "post_account", "managed": False},
        ),
        migrations.CreateModel(
            name="SchemaMigrations",
            fields=[
                ("version", models.CharField(max_length=255, primary_key=True, serialize=False))
            ],
            options={"db_table": "schema_migrations", "managed": False},
        ),
        migrations.CreateModel(
            name="School",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.TextField()),
                ("code", models.TextField()),
            ],
            options={"db_table": "school", "managed": False},
        ),
        migrations.CreateModel(
            name="StudySpacesBooking",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateTimeField(blank=True, null=True)),
                ("lid", models.IntegerField(blank=True, null=True)),
                ("rid", models.IntegerField(blank=True, null=True)),
                ("email", models.TextField(blank=True, null=True)),
                ("start", models.DateTimeField(blank=True, null=True)),
                ("end", models.DateTimeField(blank=True, null=True)),
                ("booking_id", models.TextField(blank=True, null=True)),
                ("is_cancelled", models.IntegerField()),
                ("reminder_sent", models.IntegerField()),
            ],
            options={"db_table": "study_spaces_booking", "managed": False},
        ),
        migrations.CreateModel(
            name="UniversityEvent",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("type", models.TextField()),
                ("name", models.TextField()),
                ("start", models.DateTimeField()),
                ("end", models.DateTimeField()),
            ],
            options={"db_table": "university_event", "managed": False},
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(blank=True, null=True)),
                ("platform", models.TextField()),
                ("device_id", models.TextField()),
                ("email", models.TextField(blank=True, null=True)),
            ],
            options={"db_table": "user", "managed": False},
        ),
        migrations.CreateModel(
            name="CourseAccount",
            fields=[
                (
                    "account",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        serialize=False,
                        to="legacy.Account",
                    ),
                )
            ],
            options={"db_table": "course_account", "managed": False},
        ),
        migrations.CreateModel(
            name="CourseAnonymousId",
            fields=[
                (
                    "anonymous",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        serialize=False,
                        to="legacy.AnonymousId",
                    ),
                )
            ],
            options={"db_table": "course_anonymous_id", "managed": False},
        ),
        migrations.CreateModel(
            name="CourseInstructor",
            fields=[
                (
                    "course",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        serialize=False,
                        to="legacy.Course",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
            ],
            options={"db_table": "course_instructor", "managed": False},
        ),
        migrations.CreateModel(
            name="CourseMeetingTime",
            fields=[
                (
                    "course",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        serialize=False,
                        to="legacy.Course",
                    ),
                ),
                ("weekday", models.CharField(max_length=3)),
                ("start_time", models.CharField(max_length=10)),
                ("end_time", models.TextField()),
                ("building", models.TextField(blank=True, null=True)),
                ("room", models.TextField(blank=True, null=True)),
            ],
            options={"db_table": "course_meeting_time", "managed": False},
        ),
        migrations.CreateModel(
            name="Housing",
            fields=[
                (
                    "account",
                    models.OneToOneField(
                        db_column="account",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        serialize=False,
                        to="legacy.Account",
                    ),
                ),
                ("house", models.TextField(blank=True, null=True)),
                ("location", models.TextField(blank=True, null=True)),
                ("address", models.TextField(blank=True, null=True)),
                ("off_campus", models.IntegerField(blank=True, null=True)),
                ("start", models.IntegerField()),
                ("end", models.IntegerField()),
                ("created_at", models.DateTimeField(blank=True, null=True)),
            ],
            options={"db_table": "housing", "managed": False},
        ),
        migrations.CreateModel(
            name="NotificationSetting",
            fields=[
                (
                    "account",
                    models.OneToOneField(
                        db_column="account",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        serialize=False,
                        to="legacy.Account",
                    ),
                ),
                ("setting", models.CharField(max_length=255)),
                ("enabled", models.IntegerField(blank=True, null=True)),
                ("created_at", models.DateTimeField(blank=True, null=True)),
                ("updated_at", models.DateTimeField(blank=True, null=True)),
            ],
            options={"db_table": "notification_setting", "managed": False},
        ),
        migrations.CreateModel(
            name="NotificationToken",
            fields=[
                (
                    "account",
                    models.OneToOneField(
                        db_column="account",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        serialize=False,
                        to="legacy.Account",
                    ),
                ),
                ("ios_token", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "android_token",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("dev", models.IntegerField()),
                ("created_at", models.DateTimeField(blank=True, null=True)),
                ("updated_at", models.DateTimeField(blank=True, null=True)),
            ],
            options={"db_table": "notification_token", "managed": False},
        ),
        migrations.CreateModel(
            name="PostAccountEmail",
            fields=[
                (
                    "account",
                    models.OneToOneField(
                        db_column="account",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        serialize=False,
                        to="legacy.PostAccount",
                    ),
                ),
                ("email", models.CharField(max_length=255)),
                ("verified", models.IntegerField(blank=True, null=True)),
                ("auth_token", models.CharField(blank=True, max_length=255, null=True)),
                ("created_at", models.DateTimeField(blank=True, null=True)),
            ],
            options={"db_table": "post_account_email", "managed": False},
        ),
        migrations.CreateModel(
            name="PostFilter",
            fields=[
                (
                    "post",
                    models.OneToOneField(
                        db_column="post",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        serialize=False,
                        to="legacy.Post",
                    ),
                ),
                ("type", models.CharField(max_length=255)),
                ("filter", models.CharField(max_length=255)),
            ],
            options={"db_table": "post_filter", "managed": False},
        ),
        migrations.CreateModel(
            name="PostStatus",
            fields=[
                (
                    "post",
                    models.OneToOneField(
                        db_column="post",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        serialize=False,
                        to="legacy.Post",
                    ),
                ),
                ("status", models.CharField(max_length=255)),
                ("msg", models.CharField(blank=True, max_length=255, null=True)),
                ("created_at", models.DateTimeField()),
            ],
            options={"db_table": "post_status", "managed": False},
        ),
        migrations.CreateModel(
            name="PostTargetEmail",
            fields=[
                (
                    "post",
                    models.OneToOneField(
                        db_column="post",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        serialize=False,
                        to="legacy.Post",
                    ),
                ),
                ("email", models.CharField(max_length=255)),
            ],
            options={"db_table": "post_target_email", "managed": False},
        ),
        migrations.CreateModel(
            name="PostTester",
            fields=[
                (
                    "post",
                    models.OneToOneField(
                        db_column="post",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        serialize=False,
                        to="legacy.Post",
                    ),
                ),
                ("email", models.CharField(max_length=255)),
            ],
            options={"db_table": "post_tester", "managed": False},
        ),
        migrations.CreateModel(
            name="PrivacySetting",
            fields=[
                (
                    "account",
                    models.OneToOneField(
                        db_column="account",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        serialize=False,
                        to="legacy.Account",
                    ),
                ),
                ("setting", models.CharField(max_length=255)),
                ("enabled", models.IntegerField(blank=True, null=True)),
                ("created_at", models.DateTimeField(blank=True, null=True)),
                ("updated_at", models.DateTimeField(blank=True, null=True)),
            ],
            options={"db_table": "privacy_setting", "managed": False},
        ),
        migrations.CreateModel(
            name="SchoolMajorAccount",
            fields=[
                (
                    "account",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        serialize=False,
                        to="legacy.Account",
                    ),
                ),
                ("expected_grad", models.TextField()),
            ],
            options={"db_table": "school_major_account", "managed": False},
        ),
    ]
